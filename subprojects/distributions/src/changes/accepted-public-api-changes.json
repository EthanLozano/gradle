{
    "acceptedApiChanges": [
        {
            "type": "org.gradle.api.tasks.testing.AbstractTestTask",
            "member": "Method org.gradle.api.tasks.testing.AbstractTestTask.getCallbackActionDecorator()",
            "acceptation": "Inject method no longer required",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.AbstractTestTask",
            "member": "Method org.gradle.api.tasks.testing.AbstractTestTask.getInetAddressFactory()",
            "acceptation": "Inject method no longer required",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.DefaultTask",
            "member": "Class org.gradle.api.DefaultTask",
            "acceptation": "Removed internal methods, replaced by Task.usesService()",
            "changes": [
                "org.gradle.api.internal.AbstractTask.requiresResource(java.lang.String)",
                "org.gradle.api.internal.AbstractTask.requiresResource(java.lang.String,int)"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ProjectExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ProjectExtensionsKt.repositories(org.gradle.api.initialization.dsl.ScriptHandler,kotlin.jvm.functions.Function1)",
            "acceptation": "Extension method moved to org.gradle.kotlin.dsl.ScriptHandlerExtensions",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ScriptHandlerExtensionsKt",
            "member": "Class org.gradle.kotlin.dsl.ScriptHandlerExtensionsKt",
            "acceptation": "Dedicated type for ScriptHandler extensions",
            "changes": []
        },
        {
            "type": "org.gradle.kotlin.dsl.ScriptHandlerExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ScriptHandlerExtensionsKt.repositories(org.gradle.api.initialization.dsl.ScriptHandler,kotlin.jvm.functions.Function1)",
            "acceptation": "Extension method moved from org.gradle.kotlin.dsl.ProjectExtensions",
            "changes": []
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method org.gradle.api.tasks.AbstractExecTask.getExecResult()",
            "acceptation": "This could always return null before",
            "changes": [
                "From non-null returning to null returning breaking change"
            ]
        },
        {
            "type": "org.gradle.api.capabilities.Capability",
            "member": "Method org.gradle.api.capabilities.Capability.getVersion()",
            "acceptation": "The annotation was missing: if the Capability instance is representing a required capability, the version can be null",
            "changes": [
                "From non-null returning to null returning breaking change"
            ]
        }
    ]
}
